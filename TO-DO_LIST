//TASK4
#include <iostream>
#include <vector>

struct Task {
    std::string description;
    bool completed;
};

int main() {
    std::vector<Task> tasks;

    while (true) {
        std::cout << "To-Do List Manager" << std::endl;
        std::cout << "1. Add Task" << std::endl;
        std::cout << "2. View Tasks" << std::endl;
        std::cout << "3. Mark Task as Completed" << std::endl;
        std::cout << "4. Remove Task" << std::endl;
        std::cout << "5. Quit" << std::endl;
        std::cout << "Enter your choice: ";

        int choice;
        std::cin >> choice;

        if (choice == 1) {
            Task task;
            std::cout << "Enter task description: ";
            std::cin.ignore();
            std::getline(std::cin, task.description);
            task.completed = false;
            tasks.push_back(task);
            std::cout << "Task added." << std::endl;
        } else if (choice == 2) {
            std::cout << "Tasks:" << std::endl;
            for (size_t i = 0; i < tasks.size(); ++i) {
                std::cout << i + 1 << ". ";
                if (tasks[i].completed) {
                    std::cout << "[Completed] ";
                }
                std::cout << tasks[i].description << std::endl;
            }
        } else if (choice == 3) {
            int taskNumber;
            std::cout << "Enter the task number to mark as completed: ";
            std::cin >> taskNumber;
            if (taskNumber >= 1 && taskNumber <= tasks.size()) {
                tasks[taskNumber - 1].completed = true;
                std::cout << "Task marked as completed." << std::endl;
            } else {
                std::cout << "Invalid task number." << std::endl;
            }
        } else if (choice == 4) {
            int taskNumber;
            std::cout << "Enter the task number to remove: ";
            std::cin >> taskNumber;
            if (taskNumber >= 1 && taskNumber <= tasks.size()) {
                tasks.erase(tasks.begin() + taskNumber - 1);
                std::cout << "Task removed." << std::endl;
            } else {
                std::cout << "Invalid task number." << std::endl;
            }
        } else if (choice == 5) {
            std::cout << "Goodbye!" << std::endl;
            break;
        } else {
            std::cout << "Invalid choice. Please choose a valid option." << std::endl;
        }
    }

    return 0;
}
